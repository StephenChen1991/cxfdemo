
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package live.chenchen.cxf2;

import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Logger;

import javax.activation.DataHandler;
import java.util.Date;
import java.util.GregorianCalendar;

import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
/**
 * This class was generated by Apache CXF 2.3.3
 * 2017-05-03T11:02:53.044+08:00
 * Generated source version: 2.3.3
 * 
 */

@javax.jws.WebService(
                      serviceName = "MyService",
                      portName = "MyServiceSoap",
                      targetNamespace = "http://cxf2.chenchen.live/",
                      wsdlLocation = "file:/D:/tmp/workspace/acars/cxf/pesonservice.wsdl",
                      endpointInterface = "live.chenchen.cxf2.MyServicePortType")
                      
public class MyServicePortTypeImpl implements MyServicePortType {

    private static final Logger LOG = Logger.getLogger(MyServicePortTypeImpl.class.getName());

    /* (non-Javadoc)
     * @see live.chenchen.cxf2.MyServicePortType#getPersonById(live.chenchen.cxf2.AttachmentType  parameters )*
     */
    public live.chenchen.cxf2.ArrayOfPersonType getPersonById(AttachmentType parameters) { 
		LOG.info("Executing operation getPersonById");
		System.out.println(parameters);
		try
		{
			DataHandler dataHandler = parameters.getContent();
			
			System.out.println(dataHandler.getName());
			
			InputStream is = dataHandler.getInputStream();
			OutputStream os = new FileOutputStream("c:/a.zip");
			
			int length = 0;
			byte[] buffer = new byte[1024];
			
			while(-1 != (length = is.read(buffer)))
			{
				os.write(buffer, 0, length);
			}
			
			is.close();
			os.close();
		}
		catch (java.lang.Exception ex)
		{
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		
    	ArrayOfPersonType array = new ArrayOfPersonType();
    	
    	PersonType personType = new PersonType();

		personType.setAddress("beijing");
		personType.setName("zhangsan");
		personType.setBirthday(this.date2XMLGregorianCalendar(new Date()));

    	
    	PersonType personType2 = new PersonType();

		personType2.setAddress("nanjing");
		personType2.setName("lisi");
		personType2.setBirthday(this.date2XMLGregorianCalendar(new Date()));
		
    	
    	PersonType personType3 = new PersonType();

		personType3.setAddress("shanghai");
		personType3.setName("wangwu");
		personType3.setBirthday(this.date2XMLGregorianCalendar(new Date()));
		
		RestaurantType restaurantType = new RestaurantType();
		restaurantType.setRestaurantAddress("shangdi");
		restaurantType.setRestaurantName("xiaochidian");

		SchoolType schoolType = new SchoolType();
		schoolType.setSchoolName("tsinghua university");
		schoolType.setRestaurant(restaurantType);

		personType.setSchool(schoolType);
		personType2.setSchool(schoolType);
		personType3.setSchool(schoolType);
		array.getPersons().add(personType);
		array.getPersons().add(personType2);
		array.getPersons().add(personType3);
		return array;
    }

	private XMLGregorianCalendar date2XMLGregorianCalendar(Date date)
	{
		GregorianCalendar cal = new GregorianCalendar();

		cal.setTime(date);

		XMLGregorianCalendar xmlCal = null;

		try
		{
			xmlCal = DatatypeFactory.newInstance().newXMLGregorianCalendar(cal);
		}
		catch (Exception ex)
		{
			ex.printStackTrace();
		}

		return xmlCal;
	}

}
